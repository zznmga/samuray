{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","activeClassName","active","name","Message","message","DialogReduxForm","reduxForm","form","console","log","onSubmit","handleSubmit","Field","component","Textarea","validate","required","maxLength10","Dialogs","state","dialogsPage","dialogsData","newMessageBody","dialogs","map","d","messagesData","messages","m","dialogsItems","values","sendMessage","compose","withAuthRedirect","connect","dispatch","action","sendMessageCreator"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,kFCcpMC,EAXI,SAACC,GAClB,IAAMC,EAAO,YAAcD,EAAME,GACjC,OACE,qBAAKC,UAAWC,IAAEC,OAAlB,SACE,cAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAEI,OAAtC,SACGR,EAAMS,UCJAC,EAFC,SAACV,GAAD,OAAW,qBAAKG,UAAWC,IAAEO,QAAlB,SAA4BX,EAAMW,W,iCCuDzDC,EAAkBC,YAAU,CAAEC,KAAM,UAAlBD,EApBH,SAACb,GAElB,OADAe,QAAQC,IAAI,aAAchB,GAExB,8BACE,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEV,KAAM,iBACNW,UAAWC,IACXC,SAAU,CAACC,IAAUC,SAGzB,8BACE,2DASKC,EApDC,SAACzB,GACf,IAAI0B,EAAQ1B,EAAM2B,YAGZC,GAFeF,EAAMG,eAEPH,EAAMI,QAAQC,KAAI,SAACC,GAAD,OACpC,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMP,GAAI8B,EAAE9B,SAG5B+B,EAAeP,EAAMQ,SAASH,KAAI,SAACI,GAAD,OACtC,cAAC,EAAD,CAASxB,QAASwB,EAAExB,QAAST,GAAIiC,EAAEjC,QAQrC,OACE,sBAAKC,UAAWC,IAAE0B,QAAlB,UACE,sBAAK3B,UAAWC,IAAEgC,aAAlB,UAAiCR,EAAjC,OACA,sBAAKzB,UAAWC,IAAE8B,SAAlB,UACGD,EACD,8BACE,cAACrB,EAAD,CAAiBK,SAXR,SAACoB,GAChBtB,QAAQC,IAAI,WAAYqB,GACxBrC,EAAMsC,YAAYD,EAAOR,4B,kCCCdU,sBACbC,IACAC,aAjBsB,SAACf,GACvB,MAAO,CACLC,YAAaD,EAAMC,gBAII,SAACe,GAC1B,MAAO,CACLJ,YAAa,SAAC3B,GACZ,IAAIgC,EAASC,YAAmBjC,GAChC+B,EAASC,QAKAJ,CAGbd","file":"static/js/4.6ef32b20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './../Dialogs.module.css';\n\nconst DialogItem = (props) => {\n  const path = '/dialogs/' + props.id;\n  return (\n    <div className={s.dialog}>\n      <NavLink to={path} activeClassName={s.active}>\n        {props.name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from 'react';\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => <div className={s.message}>{props.message}</div>;\n\nexport default Message;\n","import React from 'react';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport s from './Dialogs.module.css';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLength10, required } from '../../utils/validators/validators';\nimport { Textarea } from '../common/FormControls/FormControls';\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n  let newMessageBody = state.newMessageBody;\n\n  const dialogsData = state.dialogs.map((d) => (\n    <DialogItem name={d.name} id={d.id} />\n  ));\n\n  const messagesData = state.messages.map((m) => (\n    <Message message={m.message} id={m.id} />\n  ));\n\n  const onSubmit = (values) => {\n    console.log('onSubmit', values);\n    props.sendMessage(values.newMessageBody);\n  };\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogsData} </div>\n      <div className={s.messages}>\n        {messagesData}\n        <div>\n          <DialogReduxForm onSubmit={onSubmit} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst DialogForm = (props) => {\n  console.log('DialogForm', props);\n  return (\n    <div>\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          <Field\n            name={'newMessageBody'}\n            component={Textarea}\n            validate={[required, maxLength10]}\n          ></Field>\n        </div>\n        <div>\n          <button>Add Message</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nlet DialogReduxForm = reduxForm({ form: 'dialog' })(DialogForm);\n\nexport default Dialogs;\n","import React from 'react';\nimport Dialogs from './Dialogs';\n\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (message) => {\n      let action = sendMessageCreator(message);\n      dispatch(action);\n    },\n  };\n};\n\nexport default compose(\n  withAuthRedirect,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Dialogs);\n"],"sourceRoot":""}