{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatus","props","console","log","activateEditMode","e","state","setState","editMode","deactivateEditMode","updateStatusThunk","status","onInputFocus","target","select","onChange","value","prevProps","prevState","this","autoFocus","onFocus","onBlur","type","onDoubleClick","React","Component","ProfileInfo","profile","src","className","s","descriptionInfo","photos","small","alt","Preloader","Post","item","message","likesCount","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","maxLength10","MyPosts","postsData","posts","map","p","postsBlock","values","addPost","newPostText","connect","profilePage","dispatch","addPostActionCreater","Profile","MyPostsContainer","ProfileContainer","userId","match","params","authorizedUsedId","history","push","getProfileThunk","getProfileStatusThunk","compose","withRouter","auth","isAuth","setProfile"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,gBAAkB,uC,oBCApCD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,qJCkEVC,E,kDAhEb,WAAYC,GAAQ,IAAD,6BACjBC,QAAQC,IAAI,4BAA6BF,IACzC,cAAMA,IAiBRG,iBAAmB,SAACC,GAClBH,QAAQC,IAAI,WAAY,EAAKG,OAC7B,EAAKC,SAAS,CAAEC,UAAU,KArBT,EAwBnBC,mBAAqB,SAACJ,GACpBH,QAAQC,IAAI,aAAc,EAAKG,OAC/B,EAAKL,MAAMS,kBAAkB,EAAKJ,MAAMK,QACxC,EAAKJ,SAAS,CAAEC,UAAU,KA3BT,EA8BnBI,aAAe,SAACP,GACdA,EAAEQ,OAAOC,UA/BQ,EAkCnBC,SAAW,SAACV,GACV,EAAKE,SAAS,CAAEI,OAAQN,EAAEQ,OAAOG,SAhCjC,EAAKV,MAAQ,CACXE,UAAU,EACVG,OAAQV,EAAMU,QALC,E,qDASnB,WACET,QAAQC,IAAI,uB,gCAGd,SAAmBc,EAAWC,GACxBD,EAAUN,SAAWQ,KAAKlB,MAAMU,QAClCQ,KAAKZ,SAAS,CAAEI,OAAQQ,KAAKlB,MAAMU,W,oBAuBvC,WACE,OACE,8BACIQ,KAAKb,MAAME,SAOX,8BACE,uBACEY,WAAW,EACXC,QAASF,KAAKP,aACdU,OAAQH,KAAKV,mBACbM,SAAUI,KAAKJ,SACfQ,KAAK,OACLP,MAAOG,KAAKb,MAAMK,WAbtB,8BACE,sBAAMa,cAAeL,KAAKf,iBAA1B,SACGe,KAAKlB,MAAMU,QAAU,sB,GA7CRc,IAAMC,WC4BnBC,G,OAxBK,SAAC1B,GACnB,OAAKA,EAAM2B,QAKT,gCACE,8BACE,qBAAKC,IAAI,uGAEX,qBAAKC,UAAWC,IAAEC,gBAAlB,+BACA,8BACE,qBAAKH,IAAK5B,EAAM2B,QAAQK,OAAOC,MAAOC,IAAI,OAE5C,8BACE,cAAC,EAAD,CACExB,OAAQV,EAAMU,OACdD,kBAAmBT,EAAMS,yBAfxB,cAAC0B,EAAA,EAAD,M,4CCOIC,EAZF,SAACpC,GACZ,OACE,sBAAK6B,UAAWC,IAAEO,KAAlB,UACE,qBAAKT,IAAI,4FACR5B,EAAMsC,QACP,8BACE,0CAAatC,EAAMuC,oB,iCCoCvBC,EAAgBC,YAAU,CAAEC,KAAM,QAAlBD,EAjBH,SAACzC,GAChB,OACE,uBAAM2C,SAAU3C,EAAM4C,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,KAAM,cACNC,SAAU,CAACC,IAAUC,SAGzB,8BACE,sDAOOC,EAvCC,SAACpD,GACfC,QAAQC,IAAI,kBACZ,IAAMmD,EAAYrD,EAAMsD,MAAMC,KAAI,SAACC,GAAD,OAChC,cAAC,EAAD,CAAMlB,QAASkB,EAAElB,QAASC,WAAYiB,EAAEjB,gBAO1C,OACE,sBAAKV,UAAWC,IAAE2B,WAAlB,UACE,0CACA,8BACE,cAACjB,EAAD,CAAeG,SARN,SAACe,GACd1D,EAAM2D,QAAQD,EAAOE,kBASnB,sBAAK/B,UAAWC,IAAEwB,MAAlB,UAA0BD,EAA1B,WCHSQ,eAdO,SAACxD,GACrB,MAAO,CACLiD,MAAOjD,EAAMyD,YAAYR,UAIJ,SAACS,GACxB,MAAO,CACLJ,QAAS,SAACC,GACRG,EAASC,YAAqBJ,QAKrBC,CAA6CT,GCF7Ca,EAbC,SAACjE,GACf,OACE,gCACE,cAAC,EAAD,CACE2B,QAAS3B,EAAM2B,QACfjB,OAAQV,EAAMU,OACdD,kBAAmBT,EAAMS,oBAE3B,cAACyD,EAAD,Q,yBCCAC,G,6KACJ,WACE,IAAIC,EAASlD,KAAKlB,MAAMqE,MAAMC,OAAOF,OAChCA,IACHA,EAASlD,KAAKlB,MAAMuE,mBAElBrD,KAAKlB,MAAMwE,QAAQC,KAAK,UAG5BvD,KAAKlB,MAAM0E,gBAAgBN,GAC3BlD,KAAKlB,MAAM2E,sBAAsBP,K,oBAGnC,WACE,OAAO,cAAC,EAAD,eAAalD,KAAKlB,Y,GAdEwB,IAAMC,YA2BtBmD,sBAEbC,IACAhB,aAZoB,SAACxD,GACrB,MAAO,CACLsB,QAAStB,EAAMyD,YAAYnC,QAC3BjB,OAAQL,EAAMyD,YAAYpD,OAC1B6D,iBAAkBlE,EAAMyE,KAAKV,OAC7BW,OAAQ1E,EAAMyE,KAAKC,UAOI,CACvBC,eACAN,oBACAC,0BACAlE,wBAPWmE,CASbT","file":"static/js/3.d1555874.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionInfo\":\"ProfileInfo_descriptionInfo__1vk4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React from 'react';\n\nclass ProfileStatus extends React.Component {\n  constructor(props) {\n    console.log('Constructor ProfileStatus', props);\n    super(props);\n    this.state = {\n      editMode: false,\n      status: props.status,\n    };\n  }\n\n  componentDidMount() {\n    console.log('ComponentDidMount');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({ status: this.props.status });\n    }\n  }\n\n  activateEditMode = (e) => {\n    console.log('activate', this.state);\n    this.setState({ editMode: true });\n  };\n\n  deactivateEditMode = (e) => {\n    console.log('deactivate', this.state);\n    this.props.updateStatusThunk(this.state.status);\n    this.setState({ editMode: false });\n  };\n\n  onInputFocus = (e) => {\n    e.target.select();\n  };\n\n  onChange = (e) => {\n    this.setState({ status: e.target.value });\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.state.editMode ? (\n          <div>\n            <span onDoubleClick={this.activateEditMode}>\n              {this.props.status || '---------'}\n            </span>\n          </div>\n        ) : (\n          <div>\n            <input\n              autoFocus={true}\n              onFocus={this.onInputFocus}\n              onBlur={this.deactivateEditMode}\n              onChange={this.onChange}\n              type=\"text\"\n              value={this.state.status}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ProfileStatus;\n","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport s from './ProfileInfo.module.css';\nimport ProfileStatus from './ProfileStatus';\nimport { ProfileStatusWithHooks } from './ProfileStatusWithHooks';\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <div>\n        <img src=\"https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350\" />\n      </div>\n      <div className={s.descriptionInfo}>ava + description</div>\n      <div>\n        <img src={props.profile.photos.small} alt=\"\" />\n      </div>\n      <div>\n        <ProfileStatus\n          status={props.status}\n          updateStatusThunk={props.updateStatusThunk}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg\" />\r\n      {props.message}\r\n      <div>\r\n        <span>likes {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLength10, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\n\r\nconst MyPosts = (props) => {\r\n  console.log('Render MyPosts');\r\n  const postsData = props.posts.map((p) => (\r\n    <Post message={p.message} likesCount={p.likesCount} />\r\n  ));\r\n\r\n  let onSubmit = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <div>\r\n        <PostReduxForm onSubmit={onSubmit} />\r\n      </div>\r\n      <div className={s.posts}>{postsData} </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name={'newPostText'}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet PostReduxForm = reduxForm({ form: 'post' })(PostForm);\r\nexport default MyPosts;\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addPostActionCreater } from '../../../redux/profile-reducer';\n\nimport MyPosts from './MyPosts';\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreater(newPostText));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatusThunk={props.updateStatusThunk}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport {\n  setProfile,\n  getProfileThunk,\n  getProfileStatusThunk,\n  updateStatusThunk,\n} from '../../redux/profile-reducer';\nimport { withRouter } from 'react-router';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\nimport { profileAPI } from '../../api/api';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUsedId;\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n    this.props.getProfileThunk(userId);\n    this.props.getProfileStatusThunk(userId);\n  }\n\n  render() {\n    return <Profile {...this.props} />;\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUsedId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport default compose(\n  // withAuthRedirect,\n  withRouter,\n  connect(mapStateToProps, {\n    setProfile,\n    getProfileThunk,\n    getProfileStatusThunk,\n    updateStatusThunk,\n  })\n)(ProfileContainer);\n"],"sourceRoot":""}